name: Terraform-testing-dispatch
run-name: Terraform-testing-dispatch

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment (e.g., non-prod, staging, prod)"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      folder:
        description: "Terraform folder to deploy"
        required: true
        # default: "./Infra/environment/non-prod"
        type: choice
        options:
          - "./modules/ec2/"
          - "./Infra/environment/prod"
          - "./Infra/environment/uat"

permissions:
  id-token: write
  contents: read
  issues: write

concurrency:
  group: ${{ github.workflow }}

jobs:
  security:
    name: security-workflows/terraform
    uses: sherwin-williams-co/security-workflows/.github/workflows/terraform.yaml@v0
    secrets: 
      DYNATRACE_TOKEN: ${{ secrets.DYNATRACE_TOKEN }}

  infra-planning-approval:
    name: Infra Planning and Approval
    runs-on: ubuntu-latest
    needs: [security]
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Configure Git for Module Access
        run: |
          git config --global url."https://${{ secrets.PAT_GITHUB }}@github.com/".insteadOf "https://github.com/"
          aws sts get-caller-identity

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install TFLint
        run: |
          curl -LO https://github.com/terraform-linters/tflint/releases/download/v0.41.0/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/

      - name: Lint Terraform code
        run: tflint
        working-directory: ${{ github.event.inputs.folder }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ github.event.inputs.folder }}

      - name: Format Terraform code
        run: terraform fmt -recursive
        working-directory: ${{ github.event.inputs.folder }}

      - name: Check Terraform formatting
        run: terraform fmt -check -recursive
        working-directory: ${{ github.event.inputs.folder }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ github.event.inputs.folder }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ${{ github.event.inputs.folder }}

      - name: Show Terraform Plan
        run: terraform show -json tfplan > tfplan.json
        working-directory: ${{ github.event.inputs.folder }}

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ${{ github.event.inputs.folder }}/tfplan

      - name: Plan Success Message
        if: success()
        run: echo "Terraform Plan succeeded."

      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: 'rich-shw, sampsongith, sys949' # Replace with actual users or teams
          minimum-approvals: 1

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ github.event.inputs.folder }}

      - name: Notify Team - Success
        if: success()
        run: |
          echo "Terraform apply was successful."

      - name: Apply Success Message
        if: success()
        run: echo "Terraform Apply succeeded."

---
name: OpenSearch Migrations
run-name: "${{ github.workflow }} | ${{ inputs.environment }}"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select then environment to deploy

      putChannel:
        type: boolean
        required: false
        description: Configure notification channel

      putStoragePolicy:
        type: boolean
        required: false
        description: Configure index storage policy

      putIndexTemplate:
        type: boolean
        required: false
        description: Configure index template

permissions:
  id-token: write
  contents: read

jobs:
  run-migrations:
    environment: ${{ inputs.environment }}
runs-on: sw-gh-ubuntu-latest
    env:
      PURCHASE_HISTORY_OPENSEARCH_HOST: ${{ vars.PURCHASE_HISTORY_OPENSEARCH_HOST }}
      PURCHASE_HISTORY_OPENSEARCH_SSN: ${{ vars.PURCHASE_HISTORY_OPENSEARCH_SSN }}
      PURCHASE_HISTORY_OPENSEARCH_REGION: ${{ vars.PURCHASE_HISTORY_OPENSEARCH_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          aws_region: "${{ vars.AWS_REGION }}"
          role_arn: "${{ secrets.AWS_GITHUB_ROLE_TO_ASSUME }}"

      - name: Install project CLI
        shell: bash
        run: |
          ./gradlew :app:opensearch-migrations:installDist

      - name: Configure notification channel
        if: ${{ inputs.putChannel }}
        shell: bash
        run: |
          ./run-opensearch-migration \
            --env='${{ inputs.environment }}' \
            channel put-sns
          - name: Configure index storage policy
                  if: ${{ inputs.putStoragePolicy }}
                  shell: bash
                  run: |
                    ./run-opensearch-migration \
                      --env='${{ inputs.environment }}' \
                      index put-storage-policy

                - name: Configure index template
                  if: ${{ inputs.putIndexTemplate }}
                  shell: bash
                  run: |
                    ./run-opensearch-migration \
                      --env='${{ inputs.environment }}' \
                      index put-component-template \
                      index put-template
---
Action.yaml
name: 'Setup Project'
inputs:
  aws_region:
    description: AWS Region
    required: true
    type: string
  role_arn:
    description: role arn used to deploy sam, specific to an account
    required: true
    type: string

runs:
  using: composite
  steps:
    - name: Add Sherwin CA Certs
      id: certs
      uses: sherwin-williams-co/sherwin-ca-injector-action@v0

    - name: Configure other AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: ${{ inputs.role_arn }}
        # role-session-name: retail-services-sam-github-action
        udience: sts.amazonaws.com

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #       role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_TO_ASSUME }}
    #       aws-region: ${{ secrets.AWS_REGION }}
    #       audience: sts.amazonaws.com


#     - name: Sts GetCallerIdentity
#       shell: bash
#       env:
#         AWS_CA_BUNDLE: ${{ env.NODE_EXTRA_CA_CERTS }}
#       run: |
#         aws sts get-caller-identity
#         - name: Set up Java
#       uses: actions/setup-java@v4
#       with:
#         distribution: "temurin"
#         java-version: 21

#     - name: Set up Gradle
#       uses: gradle/actions/setup-gradle@v4
# #      with:
# #        cache-overwrite-existing: true